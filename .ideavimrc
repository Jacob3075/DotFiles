set ignorecase
set smartcase
set scrolloff=10 " 10 lines above/below cursor when scrolling
set number relativenumber
set hlsearch
set incsearch
set showmode
set showcmd
set history=100000
set nu
set clipboard+=unnamedplus, ideaput, autoselect
set matchpairs
set startofline
" set timeout 2000
set notimeout

let mapleader = " "

" Enable Plugins
	set surrond
	set multiple-cursors
	set commentary
	set argtextobj
	" set easymotion
	" set sneak
	set exchange
	set textobj-entire
	set ReplaceWithRegister
	set NERDTree
	set highlightedyank
	set which-key

" Plugin Settings
	" let g:EasyMotion_do_mapping=0
	let g:argtextobj_pairs="[:],(:),<:>,{:}"

" Idea Settings
	set ideajoin
	set idearefactormode=keep

" Insert mode shortcut
	inoremap <C-h> <Left>
	inoremap <C-j> <Down>
	inoremap <C-k> <Up>
	inoremap <C-l> <Right>
	inoremap <C-a> <Home>
	inoremap <C-e> <End>
	inoremap <C-d> <Delete>

" Quit insert mode
	inoremap jk <Esc>

" Quit visual mode
	vnoremap v <Esc>
	nnoremap <Leader>sc :nohlsearch<CR>

" Move to the start and end of the line
	nnoremap H ^
	nnoremap L $

" Use Q for formatting the current paragraph (or visual selection)
	vmap Q gq
	nmap Q gqap

" These create newlines like o and O but stay in normal mode
	nmap zj o<Esc>k
	nmap zk O<Esc>j

" Key bindings for quickly moving between windows
	" h left, l right, k up, j down
	nmap <leader>h <c-w>h
	nmap <leader>l <c-w>l
	nmap <leader>k <c-w>k
	nmap <leader>j <c-w>j

" Closing tabs
	nmap <leader>qb :action CloseContent<cr>
	nmap <leader>qa :action CloseAllEditors<cr>
	nmap <leader>Q :action ReopenClosedTab<cr>

" To navigate between split panes
	nmap <leader>wn :action NextSplitter<cr>
	nmap <leader>wp :action PrevSplitter<cr>

" Splits manipulation
	nmap <leader>wh :action SplitHorizontally<cr>
	nmap <leader>wv :action SplitVertically<cr>
	nmap <leader>wc :action Unsplit<cr>
	nmap <leader>wC :action UnsplitAll<cr>
	nmap <leader>wd :action OpenEditorInOppositeTabGroup<cr>
	nmap <leader>ww :action JumpToLastWindow<cr>

" Remmaped Search
	nnoremap / :action Find<CR>
	nnoremap <Leader>/ /

	nmap <leader><leader> :action RecentFiles<cr>
	nmap <leader>I :action SelectIn<cr>
	nmap ,,  :action RecentLocations<cr>
	" nmap ,,  :action HideAllWindows<cr>
	nmap \\ :action FileStructurePopup<cr>

" Navigation
	nmap <Tab> :action NextTab<cr>
	nmap <S-Tab> :action PreviousTab<cr>
	nmap <leader>. <C-^> <cr>

" AceJump
	nnoremap f :action AceAction<cr>
	nnoremap F :action AceReverseAction<cr>
	nmap <leader>af :action AceAction<cr>
	nmap <leader>aF :action AceReverseAction<cr>
	nmap <leader>ad :action AceDeclarationAction <cr>
	nmap <leader>al :action AceLineStartsAction <cr>
	nmap <leader>ai :action AceLineIndentsAction <cr>
	nmap <leader>aL :action AceLineEndsAction <cr>
	nmap <leader>at :action AceTargetAction <cr>
	" nmap t <Plug>(easymotion-t)
	" nmap T <Plug>(easymotion-T)

" GoTo
	nmap <leader>gi :action GotoImplementation<cr>
	nmap <leader>gd :action GotoDeclaration<cr>
	nmap <leader>gR :action GotoRelated<cr>
	nmap <leader>gt :action GotoTest<cr>

" Find
	nmap <leader>ff :action GotoFile<cr>
	nmap <leader>fs :action GotoSymbol<cr>
	nmap <leader>fa :action GotoAction<cr>
	nmap <leader>fc :action GotoClass<cr>
	nmap <leader>fu :action FindUsages<cr>
	nmap <leader>fU :action FindUsagesInFile<cr>

" Show
	nmap <leader>su :action ShowUsages<cr>
	nmap <leader>sU :action FindUsagesInFile<cr>
	nmap <leader>sb :action ShowBookmarks<cr>
	nmap <leader>si :action QuickImplementations<cr>

" Refactorings
	nmap <leader>R :action Refactorings.QuickListPopupAction<cr>
	nmap <leader>rr :action RenameElement<cr>
	nmap <leader>rI :action OptimizeImports<cr>
	nmap <leader>rc :action IntroduceConstant<cr>
	nmap <leader>rv :action IntroduceVariable<cr>
	nmap <leader>rf :action IntroduceProperty<cr>
	nmap <leader>rp :action IntroduceParameter<cr>
	nmap <leader>rm :action ExtractMethod<cr>
	nmap <leader>rs :action ChangeSignature<cr>

" Generate
	nmap <leader>rgg :action Generate<cr>
	nmap <leader>rgo :action OverrideMethods<cr>
	nmap <leader>rgi :action ImplementMethods<cr>

" Inspection
	nmap <leader>ic :action InspectCode<cr>

" VCS operations
	nmap <leader>vc :action Vcs.Show.Local.Changes<cr>
	nmap <leader>vP :action Vcs.Push<cr>
	nmap <leader>vu :action Vcs.UpdateProject<cr>
	nmap <leader>vp :action Vcs.QuickListPopupAction<cr>
	nmap <leader>va :action Annotate<cr>
	nmap <leader>vl :action Vcs.Show.Log<cr>
	nmap <leader>vd :action Compare.LastVersion<cr>
	nmap <leader>vr :action ChangesView.Revert<cr>
	" nmap <leader>yr :action Git.ResolveConflicts<cr>

" unimpaired mappings - from https://github.com/saaguero/ideavimrc/blob/master/.ideavimrc
	nnoremap [<space> O<esc>j
	nnoremap ]<space> o<esc>k

	nnoremap [[ :action Back<cr>
	nnoremap ]] :action Forward<cr>

	" nnoremap [{ :action EditorCodeBlockStart<cr>
	" nnoremap ]} :action EditorCodeBlockEnd<cr>

	nnoremap [m :action MethodUp<cr>
	nnoremap ]m :action MethodDown<cr>

	nnoremap [c :action VcsShowPrevChangeMarker<cr>
	nnoremap ]c :action VcsShowNextChangeMarker<cr>

" Errors
	nnoremap [e :action GotoPreviousError<cr>
	nnoremap ]e :action GotoNextError<cr>
	nnoremap <leader>ed :action ShowErrorDescription<cr>

" Tabs
	nnoremap [b :action PreviousTab<cr>
	nnoremap ]b :action NextTab<cr>

" Search
	nnoremap <leader>\ :action FindInPath<cr>

" Moving statements
	nnoremap [s :action MoveStatementUp<cr>
	nnoremap ]s :action MoveStatementDown<cr>

" Building, Running and Debugging
	nnoremap ,s :action Stop<cr>
	nnoremap ,C :action CloseProject<cr>
	nnoremap ,r :action Run<cr>
	nnoremap ,dd :action Debug<cr>
	nnoremap ,c :action RunClass<cr>
	nnoremap ,dc : DebugClass<cr>
	nnoremap ,t :action ShowRecentTests<cr>

" EasyMotion
	" nmap f <Plug>(easymotion-f)
	" nmap F <Plug>(easymotion-F)
	" nmap t <Plug>(easymotion-t)
	" nmap T <Plug>(easymotion-T)
